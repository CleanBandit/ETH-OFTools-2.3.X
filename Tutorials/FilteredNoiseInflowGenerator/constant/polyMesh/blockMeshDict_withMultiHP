/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0.1 -0.3 0.0) //0
    (2.4 -0.3 0.0) //1
    (2.4  0.3 0.0) //2
    (0.1  0.3 0.0) //3
    (0.1 -0.3 0.8) //4
    (2.4 -0.3 0.8) //5
    (2.4  0.3 0.8) //6
    (0.1  0.3 0.8) //7
    
    (0.4 -0.3 0.0) //8
    (0.4  0.3 0.0) //9
    (0.4  0.3 0.8) //10
    (0.4 -0.3 0.8) //11
    
    (1.0 -0.3 0.0) //12
    (1.0  0.3 0.0) //13
    (1.0  0.3 0.8) //14
    (1.0 -0.3 0.8) //15
    
    (1.6 -0.3 0.0) //16
    (1.6  0.3 0.0) //17
    (1.6  0.3 0.8) //18
    (1.6 -0.3 0.8) //19
    
    (2.2 -0.3 0.0) //20
    (2.2  0.3 0.0) //21
    (2.2  0.3 0.8) //22
    (2.2 -0.3 0.8) //23
    
    
    

);


blocks
(

    hex (0 8 9 3 4 11 10 7) (15 30 40) simpleGrading (1 1 1)        //  h/5 with h=0.1m
    hex (8 12 13 9 11 15 14 10) (30 30 40) simpleGrading (1 1 1)        //  h/5 with h=0.1m
    hex (12 16 17 13 15 19 18 14) (30 30 40) simpleGrading (1 1 1)        //  h/5 with h=0.1m
    hex (16 20 21 17 19 23 22 18) (30 30 40) simpleGrading (1 1 1)        //  h/5 with h=0.1m
    hex (20 1 2 21 23 5 6 22) (10 30 40) simpleGrading (1 1 1)        //  h/5 with h=0.1m
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (1 2 6 5)
        );
    }
    front
    {
        type wall;
        faces
        (
            (0 8 9 3)
        );
    }
    heatedplate01
    {
        type wall;
        faces
        (
            (8 12 13 9)
        );
    }
    heatedplate02
    {
        type wall;
        faces
        (
            (12 16 17 13)
        );
    }
    heatedplate03
    {
        type wall;
        faces
        (
            (16 20 21 17)
        );
    }
    rear
    {
        type wall;
        faces
        (
            (20 21 2 1)
        );
    }
    top
    {
        type symmetryPlane;
        faces
        (
            (4 11 10 7)
            (11 15 14 10)
            (15 19 18 14)
            (19 23 22 18)
            (23 5 6 22)
        );
    }
    side1
    {
        type cyclic;
        neighbourPatch side2;
        faces
        (
            (0 8 11 4)
            (8 12 15 11)
            (12 16 19 15)
            (16 20 23 19)
            (20 1 5 23)
        );
    }
    side2
    {
        type cyclic;
        neighbourPatch side1;
        faces
        (
            (3 7 10 9)
            (9 10 14 13)
            (13 14 18 17)
            (17 18 22 21)
            (21 22 6 2)
        );
    }
);

// ************************************************************************* //
